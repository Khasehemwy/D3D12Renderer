//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// gTex                              texture  float4          2d      T0             t0      1 
// gOutput                               UAV  float4          2d      U0             u0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_resource_texture2d (float,float,float,float) T0[0:0], space=0
dcl_uav_typed_texture2d (float,float,float,float) U0[0:0], space=0
dcl_input vThreadID.xy
dcl_temps 6
dcl_thread_group 256, 1, 1
//
// Initial variable locations:
//   vThreadIDInGroup.x <- groupThreadID.x; vThreadIDInGroup.y <- groupThreadID.y; vThreadIDInGroup.z <- groupThreadID.z; 
//   vThreadID.x <- dispatchThreadID.x; vThreadID.y <- dispatchThreadID.y; vThreadID.z <- dispatchThreadID.z
//
#line 10 "E:\Projects\Project1\Project1\Shaders\Blur\blur_cs.hlsl"
mov r0.x, vThreadID.x  // r0.x <- dispatch_x

#line 11
mov r0.yzw, vThreadID.yyyy  // r0.w <- dispatch_y

#line 13
itof r1.xyzw, l(0, 0, 0, 1)  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 18
mov r2.x, l(10)  // r2.x <- blurNum

#line 19
mov r2.y, l(0)  // r2.y <- totBlur

#line 20
ineg r2.z, r2.x  // r2.z <- i
mov r3.xyzw, r1.xyzw  // r3.x <- color.x; r3.y <- color.y; r3.z <- color.z; r3.w <- color.w
mov r2.w, r2.y  // r2.w <- totBlur
mov r4.x, r2.z  // r4.x <- i
loop 
  ilt r4.y, r4.x, r2.x
  breakc_z r4.y

#line 22
  iadd r4.y, r0.x, r4.x
  resinfo_uint r4.z, l(0), T0[0].yzxw
  mov r4.w, l(1)
  ineg r4.w, r4.w
  iadd r4.z, r4.w, r4.z
  uge r4.y, r4.z, r4.y
  iadd r4.z, r0.x, r4.x
  ilt r4.z, l(0), r4.z
  and r4.y, r4.z, r4.y
  if_nz r4.y

#line 23
    iadd r2.w, r2.w, l(1)

#line 24
    iadd r5.x, r0.x, r4.x
    mov r5.y, r0.w
    mov r5.zw, l(0,0,0,0)
    ld r5.xyzw, r5.xyzw, T0[0].xyzw
    add r3.xyzw, r3.xyzw, r5.xyzw

#line 25
  endif 

#line 26
  iadd r4.x, r4.x, l(1)
endloop 

#line 27
itof r1.xyzw, r2.wwww
div r1.xyzw, r3.xyzw, r1.xyzw  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 29
store_uav_typed U0[0].xyzw, r0.xyzw, r1.xyzw

#line 30
ret 
// Approximately 35 instruction slots used
