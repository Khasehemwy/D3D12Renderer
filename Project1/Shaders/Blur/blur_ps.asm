//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gSampler                          sampler      NA          NA             s0      1 
// gTex                              texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- pin.pos.x; v0.y <- pin.pos.y; v0.z <- pin.pos.z; v0.w <- pin.pos.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.tex.x; v2.y <- pin.tex.y; 
//   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
//
#line 39 "E:\Projects\Project1\Project1\Shaders\Blur\blur.hlsl"
resinfo_indexable(texture2d)(float,float,float,float) r0.x, l(0), t0.xyzw
mov r0.x, r0.x  // r0.x <- w

#line 40
div r0.x, l(1.000000), r0.x  // r0.x <- tex_offset.x

#line 42
mov r0.y, l(10)  // r0.y <- totSample

#line 43
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xyxx, t0.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 44
mov r0.z, l(1)  // r0.z <- i
mov r2.xyz, r1.xyzx  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z
mov r0.w, r0.z  // r0.w <- i
loop 
  ilt r1.w, r0.w, r0.y
  breakc_z r1.w

#line 45
  itof r1.w, r0.w
  mul r1.w, r0.x, r1.w
  add r3.x, r1.w, v2.x
  mov r3.y, v2.y
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t0.xyzw, s0
  add r2.xyz, r2.xyzx, r3.xyzx

#line 46
  iadd r0.w, r0.w, l(1)
endloop 

#line 47
itof r0.xyz, r0.yyyy
div r0.xyz, r2.xyzx, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 48
itof r0.w, l(1)  // r0.w <- color.w

#line 51
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 26 instruction slots used
