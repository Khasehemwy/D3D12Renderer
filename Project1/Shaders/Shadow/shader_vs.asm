//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4x4 gWorld;                   // Offset:    0 Size:    64
//
// }
//
// cbuffer cbPerPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64
//   float4x4 gProj;                    // Offset:   64 Size:    64
//   int gLightCount;                   // Offset:  128 Size:     4 [unused]
//   float3 gEyePos;                    // Offset:  132 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// cbPerObject                       cbuffer      NA          NA     CB0            cb0      1 
// cbPerPass                         cbuffer      NA          NA     CB1            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// WORLD_POSITION           0   xyz         1     NONE   float   xyz 
// COLOR                    0   xyzw        2     NONE   float   xyzw
// NORMAL                   0   xyz         3     NONE   float   xyz 
//
vs_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[0:0][4], immediateIndexed, space=0
dcl_constantbuffer CB1[1:1][8], immediateIndexed, space=0
dcl_input v0.xyz
dcl_input v1.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- vin.posLocal.x; v0.y <- vin.posLocal.y; v0.z <- vin.posLocal.z; 
//   v1.x <- vin.color.x; v1.y <- vin.color.y; v1.z <- vin.color.z; v1.w <- vin.color.w; 
//   v2.x <- vin.normal.x; v2.y <- vin.normal.y; v2.z <- vin.normal.z; 
//   o3.x <- <VS return value>.normal.x; o3.y <- <VS return value>.normal.y; o3.z <- <VS return value>.normal.z; 
//   o2.x <- <VS return value>.color.x; o2.y <- <VS return value>.color.y; o2.z <- <VS return value>.color.z; o2.w <- <VS return value>.color.w; 
//   o1.x <- <VS return value>.posWorld.x; o1.y <- <VS return value>.posWorld.y; o1.z <- <VS return value>.posWorld.z; 
//   o0.x <- <VS return value>.posProj.x; o0.y <- <VS return value>.posProj.y; o0.z <- <VS return value>.posProj.z; o0.w <- <VS return value>.posProj.w
//
#line 48 "E:\Projects\Project1\Project1\Shaders\Shadow\shader.hlsl"
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, CB0[0][0].xyzw  // r1.x <- vout.posProj.x
dp4 r1.y, r0.xyzw, CB0[0][1].xyzw  // r1.y <- vout.posProj.y
dp4 r1.z, r0.xyzw, CB0[0][2].xyzw  // r1.z <- vout.posProj.z
dp4 r1.w, r0.xyzw, CB0[0][3].xyzw  // r1.w <- vout.posProj.w

#line 49
dp4 r2.x, r1.xyzw, CB1[1][0].xyzw  // r2.x <- vout.posProj.x
dp4 r2.y, r1.xyzw, CB1[1][1].xyzw  // r2.y <- vout.posProj.y
dp4 r2.z, r1.xyzw, CB1[1][2].xyzw  // r2.z <- vout.posProj.z
dp4 r2.w, r1.xyzw, CB1[1][3].xyzw  // r2.w <- vout.posProj.w

#line 50
dp4 r1.x, r2.xyzw, CB1[1][4].xyzw  // r1.x <- vout.posProj.x
dp4 r1.y, r2.xyzw, CB1[1][5].xyzw  // r1.y <- vout.posProj.y
dp4 r1.z, r2.xyzw, CB1[1][6].xyzw  // r1.z <- vout.posProj.z
dp4 r1.w, r2.xyzw, CB1[1][7].xyzw  // r1.w <- vout.posProj.w

#line 52
dp4 r2.x, r0.xyzw, CB0[0][0].xyzw  // r2.x <- vout.posWorld.x
dp4 r2.y, r0.xyzw, CB0[0][1].xyzw  // r2.y <- vout.posWorld.y
dp4 r2.z, r0.xyzw, CB0[0][2].xyzw  // r2.z <- vout.posWorld.z

#line 53
mov r0.w, l(1.000000)
dp4 r0.x, r0.xxxw, CB0[0][0].xyzw  // r0.x <- vout.normal.x
mov r3.w, l(1.000000)
dp4 r0.y, r3.xxxw, CB0[0][1].xyzw  // r0.y <- vout.normal.y
mov r3.w, l(1.000000)
dp4 r0.z, r3.xxxw, CB0[0][2].xyzw  // r0.z <- vout.normal.z

#line 55
mov r3.xyzw, v1.xyzw  // r3.x <- vout.color.x; r3.y <- vout.color.y; r3.z <- vout.color.z; r3.w <- vout.color.w

#line 57
mov o0.xyzw, r1.xyzw
mov o2.xyzw, r3.xyzw
mov o1.xyz, r2.xyzx
mov o3.xyz, r0.xyzx
ret 
// Approximately 29 instruction slots used
